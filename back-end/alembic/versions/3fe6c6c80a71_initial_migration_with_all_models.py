"""Initial migration with all models

Revision ID: 3fe6c6c80a71
Revises:
Create Date: 2025-10-23 10:58:00.458214

"""

from typing import Sequence, Union

import pgvector.sqlalchemy
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3fe6c6c80a71"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Enable pgvector extension
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")

    op.create_table(
        "nutrition_embeddings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ref_type", sa.String(length=50), nullable=False),
        sa.Column("ref_id", sa.Integer(), nullable=False),
        sa.Column("vector", pgvector.sqlalchemy.vector.VECTOR(dim=3072), nullable=True),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_nutrition_embeddings_id"), "nutrition_embeddings", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_nutrition_embeddings_ref_id"),
        "nutrition_embeddings",
        ["ref_id"],
        unique=False,
    )
    op.create_table(
        "user_meals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("meal_name", sa.String(length=255), nullable=True),
        sa.Column(
            "meal_type",
            sa.Enum("BREAKFAST", "LUNCH", "DINNER", "SNACK", name="meal_type_enum"),
            nullable=False,
        ),
        sa.Column(
            "meal_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("image_url", sa.Text(), nullable=True),
        sa.Column(
            "image_vector", pgvector.sqlalchemy.vector.VECTOR(dim=3072), nullable=True
        ),
        sa.Column(
            "analysis_status",
            sa.Enum("PENDING", "SUCCESS", "FAILED", name="analysis_status_enum"),
            nullable=False,
        ),
        sa.Column("total_calories", sa.Float(), nullable=True),
        sa.Column("total_protein", sa.Float(), nullable=True),
        sa.Column("total_fat", sa.Float(), nullable=True),
        sa.Column("total_carbs", sa.Float(), nullable=True),
        sa.Column("total_fiber", sa.Float(), nullable=True),
        sa.Column("total_sodium", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_meals_id"), "user_meals", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_meals_user_id"), "user_meals", ["user_id"], unique=False
    )
    op.create_table(
        "meal_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("meal_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("estimated_weight", sa.Float(), nullable=True),
        sa.Column("calories", sa.Float(), nullable=True),
        sa.Column("protein", sa.Float(), nullable=True),
        sa.Column("fat", sa.Float(), nullable=True),
        sa.Column("carbs", sa.Float(), nullable=True),
        sa.Column("fiber", sa.Float(), nullable=True),
        sa.Column("sodium", sa.Float(), nullable=True),
        sa.Column("nutrition_json", sa.JSON(), nullable=True),
        sa.Column(
            "embedding_vector",
            pgvector.sqlalchemy.vector.VECTOR(dim=3072),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["meal_id"], ["user_meals.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_meal_items_id"), "meal_items", ["id"], unique=False)
    op.create_index(
        op.f("ix_meal_items_meal_id"), "meal_items", ["meal_id"], unique=False
    )
    op.create_table(
        "nutrition_analysis_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("meal_id", sa.Integer(), nullable=True),
        sa.Column("model_name", sa.String(length=100), nullable=True),
        sa.Column("raw_response", sa.JSON(), nullable=True),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["meal_id"], ["user_meals.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_nutrition_analysis_logs_id"),
        "nutrition_analysis_logs",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_nutrition_analysis_logs_meal_id"),
        "nutrition_analysis_logs",
        ["meal_id"],
        unique=False,
    )
    op.drop_index(op.f("ix_direction_food_id"), table_name="direction")
    op.drop_index(op.f("ix_direction_id"), table_name="direction")
    op.drop_table("direction")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "direction",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("order", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("direction", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("food_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["foods.id"],
            name=op.f("direction_food_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("direction_pkey")),
    )
    op.create_index(op.f("ix_direction_id"), "direction", ["id"], unique=False)
    op.create_index(
        op.f("ix_direction_food_id"), "direction", ["food_id"], unique=False
    )
    op.drop_index(
        op.f("ix_nutrition_analysis_logs_meal_id"), table_name="nutrition_analysis_logs"
    )
    op.drop_index(
        op.f("ix_nutrition_analysis_logs_id"), table_name="nutrition_analysis_logs"
    )
    op.drop_table("nutrition_analysis_logs")
    op.drop_index(op.f("ix_meal_items_meal_id"), table_name="meal_items")
    op.drop_index(op.f("ix_meal_items_id"), table_name="meal_items")
    op.drop_table("meal_items")
    op.drop_index(op.f("ix_user_meals_user_id"), table_name="user_meals")
    op.drop_index(op.f("ix_user_meals_id"), table_name="user_meals")
    op.drop_table("user_meals")
    op.drop_index(
        op.f("ix_nutrition_embeddings_ref_id"), table_name="nutrition_embeddings"
    )
    op.drop_index(op.f("ix_nutrition_embeddings_id"), table_name="nutrition_embeddings")
    op.drop_table("nutrition_embeddings")
    # ### end Alembic commands ###
