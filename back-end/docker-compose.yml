services:
  postgres:
    image: postgres:17-alpine
    container_name: macro-mate-postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - macro-mate-network

  redis:
    image: redis:8-alpine
    container_name: macro-mate-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - macro-mate-network

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: macro-mate-api
    volumes:
      - .:/app
      - /app/__pycache__
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - macro-mate-network
    env_file:
      - .env
    restart: unless-stopped

networks:
  macro-mate-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
